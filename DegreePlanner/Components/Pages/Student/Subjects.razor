@page "/my-subjects"
@rendermode InteractiveServer
@using DegreePlanner.Data
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Student")]

<h3>My Subjects</h3>
<p>@message</p>
@if (degree == null || major == null)
{
	<p style="color:red">You have not completed your enrolment yet. <a href="/my-degree">Click here to enrol</a>.</p>
}
else
{
	@if (!typeSelected)
	{
		<p>How would you like to manage your subjects?</p>
		<fieldset>
			<label>Plan</label>
			<input type="radio" name="enrol-type" @onclick="() => SetEnrolType(UserSubjectState.Planned)" />

			<label>Enrol</label>
			<input type="radio" name="enrol-type" @onclick="() => SetEnrolType(UserSubjectState.Enrolled)" />
		</fieldset>
		<button @onclick="LoadSubjects">Select</button>
	}
	else
	{
		@if (!subjects.Any())
		{
			<p>Loading subjects...</p>
		}
		else
		{
			<h3>@GetSubjectTypeTitle()</h3>
			<h4>Core subjects:</h4>
			@foreach (var subject in subjects.Where(x => x.Type == DegreeSubjectType.Core))
			{
				<label>@subject.Name</label>
				<input type="checkbox" @bind-value="subject.Selected" checked="@subject.Selected"/>
				<br />
			}
			<h4>Elective subjects:</h4>
			@foreach (var subject in subjects.Where(x => x.Type == DegreeSubjectType.Elective))
			{
				<label>@subject.Name</label>
				<input type="checkbox" @bind-value="subject.Selected" checked="@subject.Selected" />
				<br />
			}
			<h4>Major subjects:</h4>
			@foreach (var subject in subjects.Where(x => x.Type == DegreeSubjectType.Major))
			{
				<label>@subject.Name</label>
				<input type="checkbox" @bind-value="subject.Selected" checked="@subject.Selected" />
				<br />
			}
			@if (!CanEnrol())
			{
				<p style="color:red">You may not enrol in more than 4 subjects.</p>
			}
			<button @onclick="UpdateSubjects" disabled="@(!CanEnrol())">Save</button>
		}
	}
}
